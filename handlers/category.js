const { getOrCreateUser, isAdmin } = require('./common');
const { logAction } = require('../logger');
const Category = require('../models/category');

/**
 * Handle /categories command - list all categories
 */
const handleListCategories = async (ctx) => {
  try {
    const user = await getOrCreateUser(ctx);
    
    // Check if user is admin
    if (!isAdmin(user)) {
      await ctx.reply('–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.');
      return;
    }
    
    const categories = await Category.find().sort({ name: 1 });
    
    if (categories.length === 0) {
      await ctx.reply('–í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–π.');
      return;
    }
    
    let message = 'üìã –°–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:\n\n';
    
    categories.forEach((category, index) => {
      message += `${index + 1}. ${category.name} (${category.hashtag})\n`;
    });
    
    await ctx.reply(message);
    await logAction('admin_listed_categories', { userId: user._id });
  } catch (error) {
    console.error('Error handling list categories:', error);
    await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –ø–æ–∑–∂–µ.');
  }
};

module.exports = {
  handleListCategories
};